#!/usr/bin/perl

use TaskMastery;
use strict;

our $VERSION = '0.1';
our %opts = (c => $ENV{'HOME'} . "/.taskmastery");

our %options = ();

LocalGetOptions(\%opts,
	   ["c|config-file=s","config file to read in (default: ~/.taskmastry)"],
	   ["n|dry-run",      "dry-run only; just describe what will be done"],
	   ["l|list",         "list tasks available with a description"],
	   ["L|list-all",     "list all the tasks known"],
	   ["i|interactive",  "interactively select from tasks to run"],
	   ["d|describe",     "describe a task"],
	   ["GUI:VERSION", $VERSION],
	   ["GUI:otherargs_text", "[TASKS... or TAG:TAGNAME]"],
	  ) || exit;

my $tm = new TaskMastery();
$tm->read_config($opts{'c'});

if ($opts{'l'}) {
    $tm->print_task_list();
    exit;
}

if ($opts{'L'}) {
    $tm->print_task_list(1);
    exit;
}

$options{'dryrun'} = "-" if ($opts{'n'});
$options{'describe'} = "-" if ($opts{'d'});

my @tasks = @ARGV;
if ($opts{'i'}) {
    # interactively select tasks
    my $tasklist = $tm->get_task_list();
    my $counter = 1;
    my @tasknames;

    foreach my $task (sort { $a <=> $b } keys(%$tasklist)) {
	printf("%3d) %-15.15s %s\n", $counter++, $task, $tasklist->{$task});
	push @tasknames, $task;
    }

    print "Run which task(s): ";
    my $ans = <>;
    chomp($ans);

    my @tasknums = split(/(?:,| )\s*/, $ans);
    foreach my $tasknum (@tasknums) {
	next if ($tasknum !~ /^\d+/);
	push @tasks, $tasknames[$tasknum-1];
    }
}

# describe the tasks
if ($opts{'d'}) {
    $tm->describe_tasks(\%options, @tasks);
    exit;
}

$tm->run_tasks(\%options, @tasks);

# bootstrapping of Getopt::GUI::Long

sub LocalGetOptions {
    if (eval {require Getopt::GUI::Long;}) {
  	import Getopt::GUI::Long;
        # optional configure call
	Getopt::GUI::Long::Configure(qw(display_help no_ignore_case 
                                        capture_output no_gui));
  	return GetOptions(@_);
    }
    require Getopt::Long;
    import Getopt::Long;
    # optional configure call
    Getopt::Long::Configure(qw(auto_help no_ignore_case));
    GetOptions(LocalOptionsMap(@_));
}

sub LocalOptionsMap {
    my ($st, $cb, @opts) = ((ref($_[0]) eq 'HASH') 
  			    ? (1, 1, $_[0]) : (0, 2));
    for (my $i = $st; $i <= $#_; $i += $cb) {
  	if ($_[$i]) {
	    next if (ref($_[$i]) eq 'ARRAY' && $_[$i][0] =~ /^GUI:/);
  	    push @opts, ((ref($_[$i]) eq 'ARRAY') ? $_[$i][0] : $_[$i]);
  	    push @opts, $_[$i+1] if ($cb == 2);
  	}
    }
    return @opts;
}
