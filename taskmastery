#!/usr/bin/perl

use TaskMastery;
use strict;

our $VERSION = '0.1';
our %opts = (c => $ENV{'HOME'} . "/.taskmastery");

LocalGetOptions(\%opts,
	   ["c|config-file=s","config file to read in (default: ~/.taskmastry)"],
	   ["GUI:VERSION", $VERSION],
	   ["GUI:otherargs_text", "[TASKS... or TAG:TAGNAME]"],
	  ) || exit;

my $tm = new TaskMastery();
$tm->read_config($opts{'c'});

$tm->run_tasks(@ARGV);

# bootstrapping of Getopt::GUI::Long

sub LocalGetOptions {
    if (eval {require Getopt::GUI::Long;}) {
  	import Getopt::GUI::Long;
        # optional configure call
	Getopt::GUI::Long::Configure(qw(display_help no_ignore_case 
                                        capture_output no_gui));
  	return GetOptions(@_);
    }
    require Getopt::Long;
    import Getopt::Long;
    # optional configure call
    Getopt::Long::Configure(qw(auto_help no_ignore_case));
    GetOptions(LocalOptionsMap(@_));
}

sub LocalOptionsMap {
    my ($st, $cb, @opts) = ((ref($_[0]) eq 'HASH') 
  			    ? (1, 1, $_[0]) : (0, 2));
    for (my $i = $st; $i <= $#_; $i += $cb) {
  	if ($_[$i]) {
	    next if (ref($_[$i]) eq 'ARRAY' && $_[$i][0] =~ /^GUI:/);
  	    push @opts, ((ref($_[$i]) eq 'ARRAY') ? $_[$i][0] : $_[$i]);
  	    push @opts, $_[$i+1] if ($cb == 2);
  	}
    }
    return @opts;
}
